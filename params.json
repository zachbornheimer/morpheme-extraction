{"name":"nlp","tagline":"Non-statistical Language-Blind Morpheme Extraction","body":"This software is was designed by Zachary Bornheimer to do automated morpheme extraction.  The goal is for an unsupervised, non-statistical, language-blind machine learning algorithm that could parse corpera of a variety of languages.\r\n\r\nThe Paper explaining the research is coming soon.\r\n\r\n<pre>\r\nMorpheme Extraction System\r\n==========================\r\n\r\nThis software allows for the programmatic \r\nextraction of morpheme candidates from a \r\ncorpus into a defined morpheme-list location.\r\n\r\nCommand-line Arguments:\r\n\r\nVerbose Mode:      --verbose\r\nSerial Processing: --serial or --sequential --process-sequentially\r\nFull Processing:   --process\r\nOutput File:       --output-file REL-FILE-PATH\r\nCorpus Dir:        --corpus-dir  REL-CORPUS-PATH\r\n\r\nwhere REL-FILE-PATH and REL-CORPUS-PATH are relative paths to a\r\ndesired filename and/or corpus directory.\r\n\r\nVerbose Mode gives more visual output, however it impacts speed.\r\n\r\nSerial Processing yields data results for each file process as\r\n    opposed to a conglomerate data processing experience :)\r\n\r\nFull Processing yields serial and sequential results as if you\r\n    were to have run the program with --serial the first time\r\n    and then a second time without that flag.\r\n\r\nOutput File is the place in which data results are appended\r\n    (it won't overwrite existing data).\r\n\r\nCorpus Dir is the place where all the files that need to be\r\n    processed reside.\r\n</pre>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}